{"version":3,"file":"static/js/76.e931d953.chunk.js","mappings":"6PACA,EAA2B,uBAA3B,EAA6D,uBAA7D,EAAiG,yBAAjG,EAAuI,yBAAvI,EAA4K,wB,SCoG5K,EA1Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,2FACtBF,GAAU,GADY,mBAGCG,EAAAA,EAAAA,IAAYT,GAHb,OAGdG,EAHc,OAIpBC,EAAUD,GAJU,gDAMpBO,QAAQC,IAAR,MANoB,yBAQpBL,GAAU,GARU,4EAAH,qDAWrBE,GACD,GAAE,CAACR,KAGF,2BACGK,IAAU,SAACO,EAAA,EAAD,KACX,eAAIC,UAAWC,EAAf,SACGX,EAAOY,KAAI,SAAAC,GAAK,OACf,gBAAIH,UAAWC,EAAf,WACE,gBACEG,MAAM,QACNC,IAAK,kCAAoCF,EAAMG,aAC/CC,IAAKJ,EAAMK,iBAEb,iBAAKR,UAAWC,EAAhB,WACI,cAAGD,UAAWC,EAAd,SAAiCE,EAAMM,QACvC,eAAGT,UAAWC,EAAd,wBAA2CE,EAAMO,kBARnBP,EAAMQ,GAD3B,QAgBxB,C,mEClGD,EAAuB,qB,SCgBvB,MAdA,WACI,OACI,SAAC,KAAD,CACIC,OAAO,KACPR,MAAM,KACNS,MAAM,iBACNC,UAAU,eACVC,OAAO,OACPC,aAAc,CAAC,EACfC,aAAchB,EACdiB,SAAS,GAGpB,C,+LCdDC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAGHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXC,EAAkB,mCAAG,WAAMC,GAAN,uFACTP,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DM,IAFrD,cAC1BJ,EAD0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,sDAOlBG,EAAc,mCAAG,WAAMxC,GAAN,uFACLgC,EAAAA,EAAAA,IAAA,gBACZhC,EADY,oBACOiC,EADP,oBADK,cACtBE,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOd3B,EAAW,mCAAG,WAAMT,GAAN,uFACFgC,EAAAA,EAAAA,IAAA,gBACZhC,EADY,4BACeiC,EADf,oBADE,cACnBE,EADmB,yBAIlBA,EAASC,KAAKK,MAJI,2CAAH,sDAOXC,EAAY,mCAAG,WAAM1C,GAAN,uFACHgC,EAAAA,EAAAA,IAAA,gBACZhC,EADY,4BACeiC,EADf,2BADG,cACpBE,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","service/moveAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"actorDescr\":\"Cast_actorDescr__RNmqh\",\"personName\":\"Cast_personName__y5ayY\",\"character\":\"Cast_character__tKDlA\"};","// import { useParams } from 'react-router-dom';\n// import { useEffect, useState } from 'react';\n// import {fetchActors} from '../../service/moveAPI';\n// import Loader from 'components/Loader/Loader';\n// import style from './Cast.module.css'\n\n\n// const Cast = () => {\n//     const { movieId } = useParams();\n//     const { loader, setLoader } = useState(false);\n//     const { actors, setActors } = useState([]);\n\n\n//     useEffect(() => {\n//         const onActorsInMoved = async () => {\n//             setLoader(true);\n//             try {\n//                 const actors = await fetchActors(movieId);\n//                 setActors(actors);\n//             } catch (err) {\n//                 console.log(err)\n//             } finally {\n//                 setLoader(false);\n//              }\n//         }\n//         onActorsInMoved();\n//      }, [movieId])\n\n//     return (\n//         <div>\n//             {loader && <Loader />}\n//             <ul className={style.castList}>\n//                 {actors.map(actor => (\n//                     <li className={style.castItem} key={actor.id}>\n//                     <img\n//                         width=\"200px\"\n//                         src={'https://image.tmdb.org/t/p/w500' + actor.profile_path}\n//                             alt={actor.original_name} />\n//                         <div className={style.actorDscr}>\n//                             <p className={style.personName}>{actor.name}</p>\n//                             <p className={style.character}>Character: {actor.character}</p>\n//                         </div>\n//                 </li>\n//                 ))}\n                \n//             </ul>\n//         </div>\n//      );\n// }\n \n// export default Cast;\n\n\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport {fetchActors} from '../../service/moveAPI';\nimport Loader from 'components/Loader/Loader';\nimport style from './Cast.module.css'\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    const onActorsOfMovie = async () => {\n      setLoader(true);\n      try {\n        const actors = await fetchActors(movieId);\n        setActors(actors);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoader(false);\n      }\n    };\n    onActorsOfMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loader && <Loader />}\n      <ul className={style.castList}>\n        {actors.map(actor => (\n          <li className={style.castItem} key={actor.id}>\n            <img\n              width=\"200px\"\n              src={'https://image.tmdb.org/t/p/w500' + actor.profile_path}\n              alt={actor.original_name}\n            />\n            <div className={style.actorDescr}>\n                <p className={style.personName}>{actor.name}</p>\n                <p className={style.character}>Character: {actor.character}</p>\n              </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;","// extracted by mini-css-extract-plugin\nexport default {\"grid\":\"Loader_grid__69Pix\"};","import { Grid } from  'react-loader-spinner'\nimport style from './Loader.module.css'\n\nfunction Loader() {\n    return (\n        <Grid\n            height=\"80\"\n            width=\"80\"\n            color=\"rgb(255,165,0)\"\n            ariaLabel=\"grid-loading\"\n            radius=\"12.5\"\n            wrapperStyle={{}}\n            wrapperClass={style.grid}\n            visible={true}\n        />\n    )  \n} \nexport default Loader;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'f55fd89359b4e389c455cb757e994b30';\n\n\nexport const getTrendDay = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\n\n"],"names":["movieId","useParams","useState","actors","setActors","loader","setLoader","useEffect","onActorsOfMovie","fetchActors","console","log","Loader","className","style","map","actor","width","src","profile_path","alt","original_name","name","character","id","height","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","axios","API_KEY","getTrendDay","response","data","results","fetchSearchByQuery","query","fetchMovieById","cast","fetchReviews"],"sourceRoot":""}