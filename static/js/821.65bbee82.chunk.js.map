{"version":3,"file":"static/js/821.65bbee82.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/page/MoveDetalPage/MoveDetalPage.module.css?a0fc","components/BackLink/BackLink.jsx","page/MoveDetalPage/MoveDetalPage.jsx","service/moveAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"grid\":\"Loader_grid__69Pix\"};","import { Grid } from  'react-loader-spinner'\nimport style from './Loader.module.css'\n\nfunction Loader() {\n    return (\n        <Grid\n            height=\"80\"\n            width=\"80\"\n            color=\"rgb(255,165,0)\"\n            ariaLabel=\"grid-loading\"\n            radius=\"12.5\"\n            wrapperStyle={{}}\n            wrapperClass={style.grid}\n            visible={true}\n        />\n    )  \n} \nexport default Loader;","// extracted by mini-css-extract-plugin\nexport default {\"movieDetalis\":\"MoveDetalPage_movieDetalis__v9DEc\",\"genreList\":\"MoveDetalPage_genreList__3Hieo\",\"buttonBack\":\"MoveDetalPage_buttonBack__I+I2-\",\"moreInformation\":\"MoveDetalPage_moreInformation__YZU6e\"};","import { HiArrowLeft } from \"react-icons/hi\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};","import { useEffect, useState, useRef } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport {fetchMovieById} from '../../service/moveAPI';\nimport Loader from 'components/Loader/Loader';\nimport style from './MoveDetalPage.module.css';\nimport { BackLink } from 'components/BackLink/BackLink';\n\n\nconst MoveDetalPage = ({searchMovie, to}) => {\n    const { movieId } = useParams();\n    const [movieInfo, setMovieInfo] = useState(null);\n    const [loader, setLoader] = useState(false);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? \"/\");\n\n\n\n    useEffect(() => {\n        const onDetalMovie = async () => {\n            setLoader(true);\n            try {\n                const detalyMovie = await fetchMovieById(movieId);\n                setMovieInfo(detalyMovie);\n            } catch (err) {\n                console.log(err)\n            } finally {\n                setLoader(false);\n            }\n        }\n        onDetalMovie();\n    }, [movieId])\n    \n    return ( \n        <>\n        <BackLink to={backLinkHref}>Go Back</BackLink>\n          {/* <button\n            type=\"button\"\n            className={style.buttonBack}>\n            GO BACK\n          </button> */}\n            {loader && <Loader />}\n            {movieInfo && (\n        <div className={style.movieDetalis}>\n          <img\n            width=\"300px\"\n            src={'https://image.tmdb.org/t/p/w500' + movieInfo.poster_path}\n            alt={movieInfo.original_title}\n          />\n          <div className={style.genreList}>\n            <h1>\n              {movieInfo.title} ({movieInfo.release_date.slice(0, 4)})\n            </h1>\n            <p>User score: {movieInfo.popularity}</p>\n            <h2>Overview</h2>\n            <p>{movieInfo.overview}</p>\n            <h2>Genres</h2>\n            <ul className={style.genreList}>\n              {movieInfo.genres.map(genre => (\n                <li className={style.genreList} key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n      <hr />\n      <div className={style.moreInformation}>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to={'cast'} state={{ from: location }}>Cast</Link>\n          </li>\n          <li>\n            <Link to={'review'} state={{ from: location }}>Reviews</Link>\n          </li>\n        </ul>\n        <hr />\n        <Outlet />\n      </div>\n        </>\n     );\n}\n\n \nexport default MoveDetalPage;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'f55fd89359b4e389c455cb757e994b30';\n\n\nexport const getTrendDay = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\n\n"],"names":["height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","style","visible","StyledLink","styled","Link","BackLink","to","children","size","searchMovie","movieId","useParams","useState","movieInfo","setMovieInfo","loader","setLoader","location","useLocation","backLinkHref","useRef","state","from","useEffect","onDetalMovie","fetchMovieById","detalyMovie","console","log","Loader","className","src","poster_path","alt","original_title","title","release_date","slice","popularity","overview","genres","map","genre","name","id","axios","API_KEY","getTrendDay","response","data","results","fetchSearchByQuery","query","fetchActors","cast","fetchReviews"],"sourceRoot":""}