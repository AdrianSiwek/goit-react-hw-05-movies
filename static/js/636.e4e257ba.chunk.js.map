{"version":3,"file":"static/js/636.e4e257ba.chunk.js","mappings":"qLACA,EAAuB,qB,SCgBvB,MAdA,WACI,OACI,SAAC,KAAD,CACIA,OAAO,KACPC,MAAM,KACNC,MAAM,iBACNC,UAAU,eACVC,OAAO,OACPC,aAAc,CAAC,EACfC,aAAcC,EACdC,SAAS,GAGpB,C,sFCfD,GAAgB,WAAa,+BAA+B,iBAAmB,sC,SC6B/E,EAzBmB,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACXC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,eAAIC,UAAWL,EAAAA,UAAf,SACKE,GAAUA,EAAOI,KAAI,SAAAC,GAAK,OACvB,eAAIF,UAAWL,EAAAA,eAAf,UACI,SAAC,KAAD,CAAMQ,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMR,GAAhD,SACKI,EAAMK,SAF2BL,EAAME,GADzB,KAStC,C,sJClBD,EAAwB,oB,SCkCxB,EA7Ba,WACT,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAA4BD,EAAAA,EAAAA,WAAS,GAArC,eAAOE,EAAP,KAAeC,EAAf,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAa,mCAAG,2FAClBF,GAAU,GADQ,mBAGSG,EAAAA,EAAAA,MAHT,OAGRC,EAHQ,OAIdN,EAAUM,GAJI,gDAMdC,QAAQC,IAAR,MANc,yBAQdN,GAAU,GARI,4EAAH,qDAWnBE,GACH,GAAE,KAIC,6BACF,eAAIb,UAAWL,EAAf,4BACCE,IAAU,SAACqB,EAAA,EAAD,CAAYrB,OAAQA,IAC9Ba,IAAU,SAACS,EAAA,EAAD,MAGhB,C,mMC/BDC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAGHP,EAAW,mCAAG,oGACFM,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBC,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXC,EAAkB,mCAAG,WAAMC,GAAN,uFACTN,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DK,IAFrD,cAC1BJ,EAD0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,sDAOlBG,EAAc,mCAAG,WAAMC,GAAN,uFACLR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,oBACOP,EADP,oBADK,cACtBC,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdM,EAAW,mCAAG,WAAMD,GAAN,uFACFR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,oBADE,cACnBC,EADmB,yBAIlBA,EAASC,KAAKO,MAJI,2CAAH,sDAOXC,EAAY,mCAAG,WAAMH,GAAN,uFACHR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeP,EADf,2BADG,cACpBC,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/page/EditorList/EditorList.module.css?8b87","page/EditorList/EditorList.jsx","webpack://goit-react-hw-05-movies/./src/page/Page/Page.module.css?8ae3","page/Page/Page.jsx","service/moveAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"grid\":\"Loader_grid__69Pix\"};","import { Grid } from  'react-loader-spinner'\nimport style from './Loader.module.css'\n\nfunction Loader() {\n    return (\n        <Grid\n            height=\"80\"\n            width=\"80\"\n            color=\"rgb(255,165,0)\"\n            ariaLabel=\"grid-loading\"\n            radius=\"12.5\"\n            wrapperStyle={{}}\n            wrapperClass={style.grid}\n            visible={true}\n        />\n    )  \n} \nexport default Loader;","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"EditorList_moviesList__ZP+8J\",\"moviesList__item\":\"EditorList_moviesList__item__H3Jhh\"};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport style from './EditorList.module.css';\n\nconst EditorList = ({movies}) => {\n    const location = useLocation();\n\n    return ( \n        <ul className={style.movieList}>\n            {movies && movies.map(movie => (\n                <li className={style.movieList_item} key={movie.id}>\n                    <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                        {movie.title}\n                    </Link>\n                </li>\n            ))}\n        </ul>\n     );\n}\n\nEditorList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n \nexport default EditorList;","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Page_title__YW+Gg\"};","import React, { useEffect, useState } from 'react';\nimport EditorList from '../EditorList/EditorList';\nimport {getTrendDay} from '../../service/moveAPI';\nimport Loader from 'components/Loader/Loader';\nimport style from './Page.module.css';\n\nconst Page = () => {\n    const [movies, setMovies] = useState([]);\n    const [loader, setLoader] = useState(false);\n\n    useEffect(() => {\n        const FetchTrendDay = async () => {\n            setLoader(true);\n            try {\n                const trendday = await getTrendDay();\n                setMovies(trendday)\n            } catch (err) {\n                console.log(err)\n            } finally {\n                setLoader(false);\n            }\n        } \n        FetchTrendDay();\n    }, [])\n    \n\n    return ( \n        <main>\n      <h1 className={style.title}>Trending today</h1>\n      {movies && <EditorList movies={movies} />}\n      {loader && <Loader />}\n    </main>\n     );\n}\n \nexport default Page;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'f55fd89359b4e389c455cb757e994b30';\n\n\nexport const getTrendDay = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\n\n"],"names":["height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","style","visible","movies","location","useLocation","className","map","movie","to","id","state","from","title","useState","setMovies","loader","setLoader","useEffect","FetchTrendDay","getTrendDay","trendday","console","log","EditorList","Loader","axios","API_KEY","response","data","results","fetchSearchByQuery","query","fetchMovieById","movieId","fetchActors","cast","fetchReviews"],"sourceRoot":""}