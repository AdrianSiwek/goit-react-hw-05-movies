{"version":3,"file":"static/js/186.abe3497b.chunk.js","mappings":"mLACA,EAAuB,qB,SCgBvB,MAdA,WACI,OACI,SAAC,KAAD,CACIA,OAAO,KACPC,MAAM,KACNC,MAAM,iBACNC,UAAU,eACVC,OAAO,OACPC,aAAc,CAAC,EACfC,aAAcC,EACdC,SAAS,GAGpB,C,oIC+BD,UAzCgB,WACZ,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAe,mCAAG,2FACpBJ,GAAU,GADU,mBAGMK,EAAAA,EAAAA,IAAaT,GAHnB,OAGVK,EAHU,OAIhBC,EAAWD,GAJK,gDAMhBK,QAAQC,IAAR,MANgB,yBAQhBP,GAAU,GARM,4EAAH,qDAWrBI,GACF,GAAE,CAACR,KAGD,gCACKG,IAAU,SAAC,IAAD,IACS,IAAnBE,EAAQO,SACL,0BACN,wBACGP,EAAQQ,KAAI,SAAAC,GAAM,OACjB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QASC,IAAnBZ,EAAQO,QACTM,IAAAA,OAAAA,KAAqB,8CAGhC,C,+LC3CDC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAGHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXC,EAAkB,mCAAG,WAAMC,GAAN,uFACTP,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DM,IAFrD,cAC1BJ,EAD0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,sDAOlBG,EAAc,mCAAG,WAAM3B,GAAN,uFACLmB,EAAAA,EAAAA,IAAA,gBACZnB,EADY,oBACOoB,EADP,oBADK,cACtBE,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdK,EAAW,mCAAG,WAAM5B,GAAN,uFACFmB,EAAAA,EAAAA,IAAA,gBACZnB,EADY,4BACeoB,EADf,oBADE,cACnBE,EADmB,yBAIlBA,EAASC,KAAKM,MAJI,2CAAH,sDAOXpB,EAAY,mCAAG,WAAMT,GAAN,uFACHmB,EAAAA,EAAAA,IAAA,gBACZnB,EADY,4BACeoB,EADf,2BADG,cACpBE,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/Reviews/Reviews.jsx","service/moveAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"grid\":\"Loader_grid__69Pix\"};","import { Grid } from  'react-loader-spinner'\nimport style from './Loader.module.css'\n\nfunction Loader() {\n    return (\n        <Grid\n            height=\"80\"\n            width=\"80\"\n            color=\"rgb(255,165,0)\"\n            ariaLabel=\"grid-loading\"\n            radius=\"12.5\"\n            wrapperStyle={{}}\n            wrapperClass={style.grid}\n            visible={true}\n        />\n    )  \n} \nexport default Loader;","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport {fetchReviews} from '../../service/moveAPI';\nimport Loader from 'components/Loader/Loader';\nimport Notiflix from \"notiflix\";\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [loader, setLoader] = useState(false);\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        const onActorsInMoved = async () => {\n            setLoader(true);\n            try {\n                const reviews = await fetchReviews(movieId);\n                setReviews(reviews);\n            } catch (err) {\n                console.log(err)\n            } finally {\n                setLoader(false);\n             }\n        }\n        onActorsInMoved();\n     }, [movieId])\n\n    return ( \n        <>\n            {loader && <Loader />}\n            {reviews.length !== 0 && (\n                <div>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h2>Author: {review.author}</h2>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n            )}\n            {reviews.length === 0 && \n            Notiflix.Notify.info(\"We don't have any reviews for this movie\")}\n        </>\n     );\n}\n \nexport default Reviews;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'f55fd89359b4e389c455cb757e994b30';\n\n\nexport const getTrendDay = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\n\n"],"names":["height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","style","visible","movieId","useParams","useState","loader","setLoader","reviews","setReviews","useEffect","onActorsInMoved","fetchReviews","console","log","length","map","review","author","content","id","Notiflix","axios","API_KEY","getTrendDay","response","data","results","fetchSearchByQuery","query","fetchMovieById","fetchActors","cast"],"sourceRoot":""}