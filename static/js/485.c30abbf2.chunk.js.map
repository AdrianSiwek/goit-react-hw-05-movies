{"version":3,"file":"static/js/485.c30abbf2.chunk.js","mappings":"mLACA,EAAuB,qB,SCgBvB,MAdA,WACI,OACI,SAAC,KAAD,CACIA,OAAO,KACPC,MAAM,KACNC,MAAM,iBACNC,UAAU,eACVC,OAAO,OACPC,aAAc,CAAC,EACfC,aAAcC,EACdC,SAAS,GAGpB,C,kFCfD,GAAgB,WAAa,+BAA+B,iBAAmB,sC,SC6B/E,EAzBmB,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACXC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,eAAIC,UAAWL,EAAAA,UAAf,SACKE,GAAUA,EAAOI,KAAI,SAAAC,GAAK,OACvB,eAAIF,UAAWL,EAAAA,eAAf,UACI,SAAC,KAAD,CAAMQ,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMR,GAAhD,SACKI,EAAMK,SAF2BL,EAAME,GADzB,KAStC,C,8IClBD,EAA6B,+BAA7B,EAA4E,kCAA5E,EAA2H,+BAA3H,EAA8K,sCAA9K,EAAyO,uC,kBC+FzO,EA1CmB,WACjB,OAAsCI,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,CAAC,GAAzD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,SAwBpC,OAjBAC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAY,CACd,IAAMG,EAAa,mCAAG,2FACpBP,GAAU,GADU,mBAGQQ,EAAAA,EAAAA,IAAmBJ,GAH3B,OAGZP,EAHY,OAIlBC,EAAeD,GAJG,gDAMlBY,QAAQC,IAAR,MANkB,yBAQlBV,GAAU,GARQ,4EAAH,qDAWnBO,GACD,CACF,GAAE,CAACH,KAGF,iBAAMhB,UAAWL,EAAjB,UACE,iBAAKK,UAAWL,EAAhB,WACE,kBAAM4B,SAzBS,SAAAC,GACnBA,EAAMC,iBACNV,EAAgB,CAAEW,MAAOF,EAAMG,OAAOC,SAASF,MAAMG,MAAMC,eAC5D,EAsBmC9B,UAAWL,EAAzC,WACE,kBAAOoC,KAAK,OAAOC,KAAK,QAAQC,WAAS,EAAEjC,UAAWL,KACtD,mBAAQoC,KAAK,SAAS/B,UAAWL,EAAjC,uBAEDgB,IAAU,SAACuB,EAAA,EAAD,IACVzB,IAAe,SAAC0B,EAAA,EAAD,CAAYtC,OAAQY,QAI3C,C,+LC5FD2B,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAGHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXrB,EAAkB,mCAAG,WAAMM,GAAN,uFACTU,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DX,IAFrD,cAC1Ba,EAD0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,sDAOlBC,EAAc,mCAAG,WAAMC,GAAN,uFACLP,EAAAA,EAAAA,IAAA,gBACZO,EADY,oBACON,EADP,oBADK,cACtBE,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdI,EAAW,mCAAG,WAAMD,GAAN,uFACFP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACeN,EADf,oBADE,cACnBE,EADmB,yBAIlBA,EAASC,KAAKK,MAJI,2CAAH,sDAOXC,EAAY,mCAAG,WAAMH,GAAN,uFACHP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACeN,EADf,2BADG,cACpBE,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/page/EditorList/EditorList.module.css?8b87","page/EditorList/EditorList.jsx","webpack://goit-react-hw-05-movies/./src/page/MoviesPage/MoviesPage.module.css?d034","page/MoviesPage/MoviesPage.jsx","service/moveAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"grid\":\"Loader_grid__69Pix\"};","import { Grid } from  'react-loader-spinner'\nimport style from './Loader.module.css'\n\nfunction Loader() {\n    return (\n        <Grid\n            height=\"80\"\n            width=\"80\"\n            color=\"rgb(255,165,0)\"\n            ariaLabel=\"grid-loading\"\n            radius=\"12.5\"\n            wrapperStyle={{}}\n            wrapperClass={style.grid}\n            visible={true}\n        />\n    )  \n} \nexport default Loader;","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"EditorList_moviesList__ZP+8J\",\"moviesList__item\":\"EditorList_moviesList__item__H3Jhh\"};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport style from './EditorList.module.css';\n\nconst EditorList = ({movies}) => {\n    const location = useLocation();\n\n    return ( \n        <ul className={style.movieList}>\n            {movies && movies.map(movie => (\n                <li className={style.movieList_item} key={movie.id}>\n                    <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                        {movie.title}\n                    </Link>\n                </li>\n            ))}\n        </ul>\n     );\n}\n\nEditorList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n \nexport default EditorList;","// extracted by mini-css-extract-plugin\nexport default {\"moviesPage\":\"MoviesPage_moviesPage__G1F5d\",\"mainContainer\":\"MoviesPage_mainContainer__k1GHx\",\"searchForm\":\"MoviesPage_searchForm__FFIOh\",\"searchForm__input\":\"MoviesPage_searchForm__input__E0+M9\",\"searchForm__button\":\"MoviesPage_searchForm__button__JUgO+\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Loader from 'components/Loader/Loader';\nimport EditorList from '../EditorList/EditorList';\nimport style from './MoviesPage.module.css'\nimport { fetchSearchByQuery } from 'service/moveAPI';\n\n// const MoviesPage = () => {\n\n//     const [searchMovie, setSearchMovie] = useState([]);\n//     const [loader, setLoader] = useState(false);\n//     const [searchParams, setSearchParams] = useSearchParams({});\n//     const query = searchParams.get(\"query\");\n\n//     const handleSubmit = event => {\n//     event.preventDefault();\n//     setSearchParams({ query: event.target.elements.query.value.toLowerCase() });\n//     };\n    \n//     useEffect(() => {\n//     if (query) {\n//       const onSearchMovie = async () => {\n//         setLoader(true);\n//         try {\n//           const searchMovie = await getSearchingByQuery(query);\n//           setSearchMovie(searchMovie);\n//         } catch (error) {\n//           console.log(error);\n//         } finally {\n//           setLoader(false);\n//         }\n//       };\n//       onSearchMovie();\n//     }\n//   }, [query]);\n\n//     return (\n//         <main className={style.moviesPage}>\n//       <div className={style.mainContainer}>\n//         <form onSubmit={handleSubmit} className={style.searchForm}>\n//           <input type=\"text\" name=\"query\" autoFocus  className={style.searchForm__input} />\n//           <button type=\"submit\" className={style.searchForm__button}>Search</button>\n//         </form>\n//         {loader && <Loader />}\n//         {searchMovie && <EditorList movies={searchMovie} />}\n//       </div>\n//     </main>\n//   );\n// };\n     \n \n// export default MoviesPage;\n\nconst MoviesPage = () => {\n  const [searchMovie, setSearchMovie] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const queryMovie = searchParams.get('query');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: event.target.elements.query.value.toLowerCase() });\n  };\n\n  useEffect(() => {\n    if (queryMovie) {\n      const onSearchMovie = async () => {\n        setLoader(true);\n        try {\n          const searchMovie = await fetchSearchByQuery(queryMovie);\n          setSearchMovie(searchMovie);\n        } catch (error) {\n          console.log(error);\n        } finally {\n          setLoader(false);\n        }\n      };\n      onSearchMovie();\n    }\n  }, [queryMovie]);\n\n  return (\n    <main className={style.moviesPage}>\n      <div className={style.mainContainer}>\n        <form onSubmit={handleSubmit} className={style.searchForm}>\n          <input type=\"text\" name=\"query\" autoFocus  className={style.searchForm__input} />\n          <button type=\"submit\" className={style.searchForm__button}>Search</button>\n        </form>\n        {loader && <Loader />}\n        {searchMovie && <EditorList movies={searchMovie} />}\n      </div>\n    </main>\n  );\n};\n\nexport default MoviesPage;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'f55fd89359b4e389c455cb757e994b30';\n\n\nexport const getTrendDay = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\n\n"],"names":["height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","style","visible","movies","location","useLocation","className","map","movie","to","id","state","from","title","useState","searchMovie","setSearchMovie","loader","setLoader","useSearchParams","searchParams","setSearchParams","queryMovie","get","useEffect","onSearchMovie","fetchSearchByQuery","console","log","onSubmit","event","preventDefault","query","target","elements","value","toLowerCase","type","name","autoFocus","Loader","EditorList","axios","API_KEY","getTrendDay","response","data","results","fetchMovieById","movieId","fetchActors","cast","fetchReviews"],"sourceRoot":""}